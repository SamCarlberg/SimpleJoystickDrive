// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc2084.SimpleJoystickDrive;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.RobotDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static CANTalon driveBaseLeft1;
	public static CANTalon driveBaseLeft2;
	public static CANTalon driveBaseRight1;
	public static CANTalon driveBaseRight2;
	public static RobotDrive driveBaseRobotDrive;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	public static void init() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
		driveBaseLeft1 = new CANTalon(2);
		LiveWindow.addActuator("Drive Base", "Left1", driveBaseLeft1);

		driveBaseLeft2 = new CANTalon(3);
		LiveWindow.addActuator("Drive Base", "Left2", driveBaseLeft2);

		driveBaseRight1 = new CANTalon(4);
		LiveWindow.addActuator("Drive Base", "Right1", driveBaseRight1);

		driveBaseRight2 = new CANTalon(5);
		LiveWindow.addActuator("Drive Base", "Right2", driveBaseRight2);

		driveBaseRobotDrive = new RobotDrive(driveBaseLeft1, driveBaseLeft2, driveBaseRight1, driveBaseRight2);

		driveBaseRobotDrive.setSafetyEnabled(true);
		driveBaseRobotDrive.setExpiration(0.1);
		driveBaseRobotDrive.setSensitivity(0.5);
		driveBaseRobotDrive.setMaxOutput(1.0);

		driveBaseRobotDrive.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
		driveBaseRobotDrive.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	}
}
